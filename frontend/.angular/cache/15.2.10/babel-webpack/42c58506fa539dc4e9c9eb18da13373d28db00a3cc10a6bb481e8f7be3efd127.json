{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:9090/items';\nexport class TutorialService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  static #_ = this.ɵfac = function TutorialService_Factory(t) {\n    return new (t || TutorialService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TutorialService,\n    factory: TutorialService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAKA,MAAMA,OAAO,GAAG,6BAA6B;AAK7C,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAML,OAAO,CAAC;EACpC;EAEAK,GAAG,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAW,GAAGL,OAAO,IAAIM,EAAE,EAAE,CAAC;EACpD;EAEAC,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC;EACtC;EAEAE,MAAM,CAACJ,EAAO,EAAEE,IAAS;IACvB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGX,OAAO,IAAIM,EAAE,EAAE,EAAEE,IAAI,CAAC;EAChD;EAEAI,MAAM,CAACN,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAC,GAAGZ,OAAO,IAAIM,EAAE,EAAE,CAAC;EAC7C;EAAC;qBAtBUL,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAY,SAAfZ,eAAe;IAAAa,YAFd;EAAM","names":["baseUrl","TutorialService","constructor","http","getAll","get","id","create","data","post","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Acer Swift 3 i7 11TH\\Desktop\\test-app\\frontend\\src\\app\\services\\tutorial.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Tutorial } from '../models/tutorial.model';\n\nconst baseUrl = 'http://localhost:9090/items';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TutorialService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<any> {\n    return this.http.get<any>(baseUrl);\n  }\n\n  get(id: any): Observable<Tutorial> {\n    return this.http.get<Tutorial>(`${baseUrl}/${id}`);\n  }\n\n  create(data: any): Observable<any> {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id: any, data: any): Observable<any> {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id: any): Observable<any> {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}